<script>
    let linkCss = document.createElement('link');
    linkCss.rel = 'stylesheet'
    linkCss.href = '{{ API_URL }}/static/test.css';

    document.head.appendChild(linkCss);
</script>

<div>
    <div id="filter-form" class="tw-preflight tw-grid tw-grid-rows-4 tw-grid-flow-col ">
        <div class="tw-row-span-1">
            <div class="tw-grid tw-grid-cols-3 tw-gap-4">
                <div class="tw-col-span-1 tw-flex tw-flex-col tw-relative">
                    <div>
                        <label for="condition">Condition:</label>
                        <input type="text" id="condition" name="condition" onkeyup="showResults(this.value, 'condition','valuesConditions')" class="tw-input tw-input-bordered tw-w-full max-w-xs">
                        <div id="valuesConditions" class="tw-absolute tw-bg-white tw-w-full"></div>
                    </div>
                </div>
                <div class="tw-col-span-1 tw-flex tw-flex-col tw-relative">
                    <div>
                        <label for="property">Property:</label>
                        <input type="text" id="property" name="property" onkeyup="showResults(this.value, 'property','valuesProperties')" class="tw-input tw-input-bordered tw-w-full max-w-xs">
                        <div id="valuesProperties" class="tw-absolute tw-bg-white tw-w-full"></div>
                    </div>
                </div>
                <div class="tw-col-span-1 tw-flex tw-flex-col">
                    <div>
                        <input type="text" name="q" id="q" onKeyUp="showResults(this.value, 'q','result')"/>
                        <div id="result" class="tw-bg-white tw-absolute"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="tw-row-span-1">
            <div class="tw-grid tw-grid-cols-3 tw-gap-4">
                <div class=" tw-col-span-1 tw-flex tw-flex-col">
                    <label for="operation">Operation:</label>
                    <select class="tw-select tw-select-bordered tw-du-w-full tw-max-w-xs" name="operation" id="operation">
                    <option value="Equal">Equal</option>
                    <option value="Less than">Less than</option>
                    <option value="Less tan or equal">Less tan or equal</option>
                    <option value="Greater than">Greater than</option>
                    <option value="Less tan or equal">Greater than or equal</option>
                    </select>
                </div>
                <div class="tw-col-span-1 tw-flex tw-flex-col">
                    <label for="value">Value:</label>
                    <input type="number" id="value" name="value" class="tw-input tw-input-bordered w-full max-w-xs">
                </div>
                <div class="tw-col-span-1 tw-flex tw-flex-col">
                    <label for="band">Band:</label>
                    <select class="tw-select tw-select-bordered tw-w-full tw-max-w-xs" name="band" id="band">
                    <option value="g">g</option>
                    <option value="r">r</option>
                    <option value="i">i</option>
                    </select>
                </div>
            </div>
        </div>
        <div class="tw-row-span-1">
            <button class="tw-btn tw-btn-primary">Button</button>
        </div>
    </div>
</div>

<script>
    let search_conditions = ['constant', 'difference', 'no filter']
    let search_property = ['mag']

    function autocompleteMatch(input, elementId) {
        if (input == '') {
            return [];
        }
        let reg = new RegExp(input)
        if( elementId == "result"){
            return search_terms.filter((term) => term.match(reg));
        } else if ( elementId == "valuesConditions") {
            return search_conditions.filter((term) => term.match(reg))
        } else if ( elementId == "valuesProperties") {
            return search_property.filter((term) => term.match(reg))
        }
    }

    function showResults(val, inputId, elementId) {
        res = document.getElementById(elementId);
        res.innerHTML = '';
        let list = '';
        let terms = autocompleteMatch(val.toLowerCase(), elementId);
        for (i=0; i<terms.length; i++) {
            list += `<li onclick="selectResult(this, '${inputId}', '${elementId}')">${terms[i]}</li>`;
        }
        res.innerHTML = '<ul>' + list + '</ul>';
    }

    function selectResult(element, inputId, elementId) {
        console.log(element, inputId)
        document.getElementById(inputId).value = element.innerText;
        document.getElementById(elementId).innerHTML = '';
    }
</script>
