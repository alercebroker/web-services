<script id="htmx-script" src="https://unpkg.com/htmx.org@1.9.11"></script>

<script>
    let linkCss = document.createElement('link');
    linkCss.rel = 'stylesheet'
    linkCss.href = '{{ API_URL }}/static/main.css';

    document.head.appendChild(linkCss);
</script>

<div class="tw-preflight">
    <div id="filter-form" class="tw-container tw-mx-auto tw-grid tw-grid-rows-4 tw-grid-flow-col">
        <div class="tw-row-span-1 tw-h-20">
            <div class="tw-flex tw-flex-col">
                <label for="condition">Condition:</label>
                <select 
                class="tw-bg-transparent tw-border-2 tw-rounded-lg tw-w-1/4" 
                name="condition" 
                id="condition" 
                hx-get="{{ API_URL }}/htmx/filters"
                hx-trigger="click"
                hx-target="#filterCall"
                hx-swap="outerHTML"
                >
                <option style="display:none" ></option>
                <option value="constant">Constant</option>
                <option value="difference">Difference</option>
                <option value="">No filter</option>
                </select>
            </div>
        </div>
        <div id="filterCall" class="tw-row-span-1"></div>
        <div class="tw-row-span-1 tw-flex tw-flex-row-reverse tw-mx-8">
            <button class="tw-btn tw-btn-primary">Save</button>
        </div>
    </div>
</div>

<script>
    const search_conditions = ['constant', 'difference', '']
    const search_property = ['mag']
    const search_operations = ['equal', 'less', 'less eq', 'greater','greater eq']
    const search_bands = ['g', 'r', 'i']
    const select_condition = document.getElementById("condition");

    let select_operation =  null;
    let select_bands = null;
    let input_property = null;
    let input_value = null;

    select_condition.addEventListener('change', (e) =>{
        let messageHTML = document.getElementById(`${e.target.id}-error`);
        if(messageHTML) {
            messageHTML.remove();
        }
        selectValidations(e.target)
    })

    function selectValidations(val) {

        const existingErrorElement = document.querySelector(`#${val.id}-error`)
        if (existingErrorElement) {
            return null;
        }
        if (search_conditions.includes(val.value)){
            return true;
        } else {
            const errorElement = document.createElement('span');
            errorElement.id = `${val.id}-error`;
            errorElement.innerHTML = "The field must be one of the options shown.";
            val.insertAdjacentElement("afterend", errorElement);
        }
    }
</script>
