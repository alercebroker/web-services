<script>
    // Conditionally loads css file to prevent duplicate downloading / parsing
    function isCssLoaded(url) {
        for (let css of document.styleSheets) {
            if (css.href === url) {
                return true;
            }
        }
        return false;
    }

    function conditionalCss(href) {
        if (!isCssLoaded(href)) {
            var link = document.createElement("link");
            link.href = href;
            link.type = "text/css";
            link.rel = "stylesheet";
            document.head.appendChild(link);
        }
    }

    conditionalCss("{{ API_URL }}/static/main.css");
    conditionalCss("https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css");
</script>
<script type="module">
    import * as echart from "{{ API_URL }}/static/jszip.js";

    var oid = {{ oid }};
    var detections = {{ detections | tojson }};
    var non_detections = {{ non_detections | tojson }};

    function dateToString(date) {
        date = date.toISOString();
        date = date.replace(/[-:]/g, (c) => '');
        // date = date.replace('T', '_');
        date = date.split('T')[0];
        return date;
    }

    function jsonToCsv(arrayOfJson) {
        const replacer = (key, value) => (value === null ? '' : value);
        const header = Object.keys(arrayOfJson[0]);
        let csv = arrayOfJson.map((row) =>
            header
                .map((fieldName) => JSON.stringify(row[fieldName], replacer))
                .join(',')
        );
        csv.unshift(header.join(','));
        csv = csv.join('\r\n');
        return csv;
    }

    /* based in https://stackoverflow.com/questions/8847766/how-to-convert-json-to-csv-format-and-store-in-a-variable */
    function download(oid, detections, nonDetections) {
        const today = dateToString(new Date())
        const filename = `${oid}_${today}.zip`;
        const zip = new JSZip();
        zip.file('detections.csv', jsonToCsv(detections));
        zip.file('non_detections.csv', jsonToCsv(nonDetections));
        zip.generateAsync({ type: 'blob' }).then((content) => {
            const url = URL.createObjectURL(content);
            const a = document.getElementById("lc-download-ref");
            a.href = url;
            a.download = filename;
            a.click();
        });
    }

    document.getElementById("lc-download").onclick = () => download(oid, detections, non_detections);
</script>
<a id="lc-download-ref" style="display: none;"></a>
<button id="lc-download" type="button"
    class="bg-white dark:bg-black border border-black dark:border-white text-black dark:text-white hover:bg-neutral-100 dark:hover:bg-neutral-800 font-semibold py-1 px-2 rounded-md flex items-center">
    <i class="fa fa-download me-2"></i>
    Download
</button>