name: Build Staging

on:
  push:
    branches:
      - 181-agregar-rollback-y-test-staging

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  build-dagger:
    runs-on: ubuntu-latest
    env:
      GHCR_TOKEN: ${{ secrets.ADMIN_TOKEN }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
          cache: 'poetry'
      - name: Install dependencies
        run: |
          cd ci
          poetry install
      - name: Run dagger pipeline
        run: |
          cd ci
          poetry run python main.py build astroobject staging

  release-chart:
    needs: build-dagger
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Configure Git
        run: |
          git config user.name "alerceadmin"
          git config user.email "alerceadmin@users.noreply.github.com"

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.5.0
        env:
          CR_TOKEN: "${{ secrets.ADMIN_TOKEN }}"

  deploy:
    needs: release-chart
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: us-east-1
          output-credentials: true
          unset-current-credentials: true
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
          cache: 'poetry'
      - name: Install dependencies
        run: |
          cd ci
          poetry install
      - name: Run dagger pipeline
        run: |
          cd ci
          poetry run python main.py deploy astroobject staging

  test-dagger:
    needs: deploy
    runs-on: ubuntu-latest
    env:
      GHCR_TOKEN: ${{ secrets.ADMIN_TOKEN }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
          cache: 'poetry'
      - name: Install dependencies
        run: |
          cd ci
          poetry install
      - name: Run dagger pipeline
        run: |
          cd ci
          poetry run python main.py test astroobject staging
  
  rollback:
    needs: test-dagger
    if: failure()
    runs-on: ubuntu-latest
    env:
      GHCR_TOKEN: ${{ secrets.ADMIN_TOKEN }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
          cache: 'poetry'
      - name: Install dependencies
        run: |
          cd ci
          poetry install
      - name: Run dagger pipeline
        run: |
          cd ci
          poetry run python main.py rollback astroobject staging
