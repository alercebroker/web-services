name: Build Staging

on:
  push:
    branches:
      - main

jobs:
  build-dagger:
    runs-on: ubuntu-latest
    env:
      GHCR_TOKEN: ${{ secrets.ADMIN_TOKEN }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
          cache: 'poetry'
      - name: Install dependencies
        run: |
          cd ci
          poetry install
      - name: Run dagger pipeline
        run: |
          cd ci
          poetry run python main.py build staging
  release-chart:
    needs: build-dagger
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main

      - name: Configure Git
        run: |
          git config user.name "alerceadmin"
          git config user.email "alerceadmin@users.noreply.github.com"

<<<<<<< HEAD
  astroobject:
    uses: ./.github/workflows/build.yml
    needs: update_versions
    with:
      build-type: staging
      service-name: astroobject
      base-folder: astroobject
      build-context: astroobject

  magstats:
    uses: ./.github/workflows/build.yml
    needs: update_versions
    with:
      build-type: staging
      service-name: magstats
      base-folder: magstats
=======
      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.5.0
        env:
          CR_TOKEN: "${{ secrets.ADMIN_TOKEN }}"
  deploy:
    needs: release-chart
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: us-east-1
          output-credentials: true
          unset-current-credentials: true
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
          cache: 'poetry'
      - name: Install dependencies
        run: |
          cd ci
          poetry install
      - name: Run dagger pipeline
        run: |
          cd ci
          poetry run python main.py deploy staging
>>>>>>> main
